@model SmartInventoryManagement.Models.Product

@{
    ViewData["Title"] = "Create Product";
}

<div class="container my-4">
    <h1>@ViewData["Title"]</h1>
    
    <div class="row">
        <div class="col-md-8">
            <div class="card">
                <div class="card-header bg-light">
                    <h5 class="mb-0">Product Details</h5>
                </div>
                <div class="card-body">
                    <form id="createProductForm" method="post">
                        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                        
                        <div class="mb-3">
                            <label asp-for="Name" class="form-label"></label>
                            <input asp-for="Name" class="form-control" />
                            <span asp-validation-for="Name" class="text-danger"></span>
                        </div>
                        
                        <div class="mb-3">
                            <label asp-for="CategoryId" class="form-label">Category</label>
                            <select asp-for="CategoryId" class="form-select">
                                <option value="">-- Select Category --</option>
                                @foreach (var category in ViewBag.Categories)
                                {
                                    <option value="@category.Id">@category.Name</option>
                                }
                            </select>
                            <span asp-validation-for="CategoryId" class="text-danger"></span>
                        </div>
                        
                        <div class="mb-3">
                            <label asp-for="Price" class="form-label"></label>
                            <div class="input-group">
                                <span class="input-group-text">$</span>
                                <input asp-for="Price" class="form-control" type="number" step="0.01" min="0" />
                            </div>
                            <span asp-validation-for="Price" class="text-danger"></span>
                        </div>
                        
                        <div class="row">
                            <div class="col-md-6 mb-3">
                                <label asp-for="StockQuantity" class="form-label"></label>
                                <input asp-for="StockQuantity" class="form-control" type="number" min="0" />
                                <span asp-validation-for="StockQuantity" class="text-danger"></span>
                            </div>
                            
                            <div class="col-md-6 mb-3">
                                <label asp-for="LowStockThreshold" class="form-label"></label>
                                <input asp-for="LowStockThreshold" class="form-control" type="number" min="0" />
                                <span asp-validation-for="LowStockThreshold" class="text-danger"></span>
                            </div>
                        </div>
                        
                        <div class="d-flex justify-content-between mt-4">
                            <a asp-action="Index" class="btn btn-outline-secondary">
                                <i class="bi bi-arrow-left"></i> Back to List
                            </a>
                            <button type="submit" id="submitButton" class="btn btn-primary">
                                <i class="bi bi-save"></i> Create
                            </button>
                        </div>
                    </form>
                    
                    <!-- Loading spinner (initially hidden) -->
                    <div id="loadingSpinner" class="text-center my-3 d-none">
                        <div class="spinner-border text-primary" role="status">
                            <span class="visually-hidden">Loading...</span>
                        </div>
                        <p class="mt-2">Creating product...</p>
                    </div>
                    
                    <!-- Success alert (initially hidden) -->
                    <div id="successAlert" class="alert alert-success mt-3 d-none">
                        <i class="bi bi-check-circle-fill"></i> Product created successfully!
                    </div>
                    
                    <!-- Error alert (initially hidden) -->
                    <div id="errorAlert" class="alert alert-danger mt-3 d-none">
                        <i class="bi bi-exclamation-triangle-fill"></i> 
                        <span id="errorMessage">An error occurred.</span>
                    </div>
                </div>
            </div>
        </div>
        
        <div class="col-md-4">
            <div class="card">
                <div class="card-header bg-light">
                    <h5 class="mb-0">Tips</h5>
                </div>
                <div class="card-body">
                    <p>Complete all fields to add a new product to your inventory.</p>
                    <ul>
                        <li>Choose an appropriate category</li>
                        <li>Set a competitive price</li>
                        <li>Enter the current stock quantity</li>
                        <li>Define a low stock threshold for automatic alerts</li>
                    </ul>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    
    <script>
        $(document).ready(function() {
            // AJAX form submission
            $("#createProductForm").submit(function(e) {
                e.preventDefault();
                
                // Show loading spinner, hide alerts
                $("#loadingSpinner").removeClass("d-none");
                $("#submitButton").prop("disabled", true);
                $("#successAlert, #errorAlert").addClass("d-none");
                
                // Get form data
                var formData = $(this).serialize();
                
                // Submit form via AJAX
                $.ajax({
                    url: "@Url.Action("CreateAjax")",
                    type: "POST",
                    data: formData,
                    success: function(response) {
                        if (response.success) {
                            // Show success message
                            $("#successAlert").removeClass("d-none");
                            
                            // Reset form
                            $("#createProductForm")[0].reset();
                            
                            // Redirect after a delay
                            setTimeout(function() {
                                window.location = "@Url.Action("Index")";
                            }, 2000);
                        } else {
                            // Show error message
                            if (response.errors && response.errors.length > 0) {
                                $("#errorMessage").html("Please correct the following errors:<br>" + 
                                    response.errors.join("<br>"));
                            } else {
                                $("#errorMessage").text(response.message || "An error occurred while creating the product.");
                            }
                            $("#errorAlert").removeClass("d-none");
                        }
                    },
                    error: function() {
                        // Show error message
                        $("#errorMessage").text("An error occurred while connecting to the server. Please try again.");
                        $("#errorAlert").removeClass("d-none");
                    },
                    complete: function() {
                        // Hide loading spinner, enable submit button
                        $("#loadingSpinner").addClass("d-none");
                        $("#submitButton").prop("disabled", false);
                    }
                });
            });
        });
    </script>
} 